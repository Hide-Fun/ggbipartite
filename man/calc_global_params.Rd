% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/global_layout.R
\name{calc_global_params}
\alias{calc_global_params}
\title{Calculate global layout parameters for paired boxes}
\usage{
calc_global_params(
  .mat,
  .x0 = 0,
  .y0 = 0,
  .gap = 0,
  .box_ratio = 5,
  .ratio = 1/1.618,
  .adjust_box_height = TRUE
)
}
\arguments{
\item{.mat}{A numeric matrix. Its sum defines the base height used in layout.}

\item{.x0, .y0}{Numeric scalars giving the origin (bottom-left) of the first
box.}

\item{.gap}{Non-negative numeric scalar; the baseline vertical gap between
items (rows for box 1, columns for box 2) before any adjustment.}

\item{.box_ratio}{Positive numeric scalar; the divisor used to derive the
box width as `sum(.mat) / .box_ratio`.}

\item{.ratio}{Positive numeric scalar; the aspect-like divisor used to derive
the overall width as `sum(.mat) / .ratio`.}

\item{.adjust_box_height}{Logical; if `TRUE`, per-box gaps are adjusted via
[adjust_box_height()] so that the two boxes have equal total height.}
}
\value{
A named list with elements:
\itemize{
  \item `width`: overall width computed as `sum(.mat) / .ratio`.
  \item `box_width`: width of an individual box, `sum(.mat) / .box_ratio`.
  \item `box1`: numeric length-2 vector `(x0, y0)` for the first box origin.
  \item `box2`: numeric length-2 vector `(x, y)` for the second box origin,
        where `x = width - box_width` and `y = y0`.
  \item `gap1`: vertical gap used for box 1 (rows).
  \item `gap2`: vertical gap used for box 2 (columns).
}
}
\description{
Compute overall layout parameters (widths, origins, and vertical gaps) for a
two-box layout derived from a matrix input. The total "size" used for layout
is the sum of all entries in `.mat`. When `.adjust_box_height` is `TRUE`,
vertical gaps for each box are adjusted so that the total heights of the two
boxes match (based on the matrix's row/column counts).
}
\details{
Internally, the variable `.interaction` is used for `sum(.mat)` (total mass).
If `.adjust_box_height` is `TRUE`, gaps are computed by
[adjust_box_height()] to equalize the total height:
\deqn{\text{height}_\mathrm{box1} = \sum(\mathtt{.mat}) + (\mathtt{.nrow}-1)\times \mathtt{gap1}}
\deqn{\text{height}_\mathrm{box2} = \sum(\mathtt{.mat}) + (\mathtt{.ncol}-1)\times \mathtt{gap2}}
}
\note{
This function relies on [adjust_box_height()]. As currently written,
if the two computed heights are already equal, that helper emits a message
and does not return a list of gaps (i.e., returns `NULL`). Callers expecting
`gap1`/`gap2` should handle that case accordingly.
}
\examples{
m <- matrix(c(1, 2, 1,
              0, 1, 3), nrow = 3)
calc_global_params(
  .mat = m,
  .x0 = 0, .y0 = 0,
  .gap = 0.2,
  .box_ratio = 5,
  .ratio = 1 / 1.618,
  .adjust_box_height = FALSE
)

# With adjustment (be aware of the equal-height note)
calc_global_params(
  .mat = m,
  .gap = 0.1,
  .adjust_box_height = TRUE
)

}
\seealso{
[adjust_box_height()]
}
