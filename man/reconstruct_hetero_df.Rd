% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hetero_df.R
\name{reconstruct_hetero_df}
\alias{reconstruct_hetero_df}
\title{Reconstruct a named list of tibbles from a combined tibble}
\usage{
reconstruct_hetero_df(
  combined,
  prefixes = NULL,
  separator = "__",
  rows = NULL,
  drop_empty = FALSE
)
}
\arguments{
\item{combined}{A tibble returned by `combine_hetero_df()`.}

\item{prefixes}{Optional character vector of prefixes to reconstruct.
- If `NULL` (default): auto-detect from column names.
- If supplied: only these prefixes are reconstructed (order preserved).}

\item{separator}{String separator between prefix and original name
(default `"__"`).}

\item{rows}{Optional integer vector of original row counts per prefix.
- If named: matched by prefix name.
- If unnamed: must have length equal to `length(prefixes)` and is
  matched by position.
When provided, `rows` overrides inference.}

\item{drop_empty}{Logical; if `TRUE`, drop groups inferred to have 0 rows.
Default `FALSE` (return 0-row tibbles).}
}
\value{
A named list of tibbles keyed by prefix.
}
\description{
Split a combined tibble created by `combine_hetero_df()` back into a
named list of tibbles by parsing column name prefixes. Row counts are
inferred by trimming trailing all-NA rows per prefix group, or can be
explicitly provided via `rows`.
}
\examples{
x <- list(
  a = tibble::tibble(id = 1:2, v = c(10, 20)),
  b = tibble::tibble(z = c("x", "y", "z"))
)
comb <- combine_hetero_df(x, prefixes = c("left", "right"))
parts <- reconstruct_hetero_df(comb, prefixes = c("left", "right"))
names(parts)        # "left" "right"
parts$left          # restores columns id, v
parts$right         # restores column z, trimmed to 3 rows

# If your original data had trailing all-NA rows, pass `rows` explicitly:
# parts <- reconstruct_hetero_df(comb, prefixes = c("left", "right"),
#                                rows = c(left = 5, right = 3))

}
